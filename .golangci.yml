# This file contains all available configuration options with their default values.
# Copy from https://github.com/golangci/golangci-lint/blob/master/.golangci.example.yml

# options for analysis running
run:
  # default concurrency is a available CPU number
  # just use default
  # concurrency: 4

  # timeout for analysis, e.g. 30s, 5m, default is 1m
  timeout: 5m

  # include test files or not, default is true
  tests: true

  # which dirs to skip: issues from them won't be reported;
  # can use regexp here: generated.*, regexp is applied on full path;
  # default value is empty list, but default dirs are skipped independently
  # from this option's value (see skip-dirs-use-default).
  skip-dirs:
    - proto
    - dist

  # default is true. Enables skipping of directories:
  #   vendor$, third_party$, testdata$, examples$, Godeps$, builtin$
  skip-dirs-use-default: true

# output configuration options
output:
  # colored-line-number|line-number|json|tab|checkstyle|code-climate, default is "colored-line-number"
  format: colored-line-number

  # print lines of code with issue, default is true
  print-issued-lines: true

  # print linter name in the end of issue text, default is true
  print-linter-name: true

  # make issues output unique by line, default is true
  uniq-by-line: true

linters-settings:
  dupl:
    threshold: 300
  funlen:
    lines: 200
    statements: 55
  goconst:
    min-len: 2
    min-occurrences: 3
  gocritic:
    enabled-tags:
      - diagnostic
      - experimental
      - performance
      - style
      - opinionated
    disabled-checks:
      - dupImport # https://github.com/go-critic/go-critic/issues/845
      - ifElseChain
      - octalLiteral
      - whyNoLint
      - wrapperFunc
      - hugeParam
  gocyclo:
    min-complexity: 20
  gomnd:
    # don't include the "operation" and "assign"
    checks:
      - argument
      - case
      - condition
      - return
    ignored-numbers:
      - "0"
      - "1"
      - "2"
      - "3"
    ignored-functions:
      - strings.SplitN
  govet:
    check-shadowing: true
    settings:
      printf:
        funcs:
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf
  lll:
    line-length: 160
  misspell:
    locale: US
  nolintlint:
    allow-leading-space: true # don't require machine-readable nolint directives (i.e. with no leading space)
    allow-unused: false # report any unused nolint directives
    require-explanation: false # don't require an explanation for nolint directives
    require-specific: false # don't require nolint directives to be specific about which linter is being skipped

linters:
  disable-all: true
  enable:
    - govet
    - deadcode
    - varcheck
    - gosimple
    - ineffassign
    - staticcheck
    - bodyclose
    - asciicheck
    - depguard
    - dogsled
    - errcheck
    - exhaustive
    - exportloopref
    - gocognit
    - gocyclo
    - gofmt
    - gofumpt
    - goheader
    - goimports
    - gomodguard
    - goprintffuncname
    - misspell
    - nakedret
    - nestif
    - rowserrcheck
    - sqlclosecheck
    - structcheck
    - typecheck
    - unconvert
    - unused
    - whitespace
    - durationcheck
    - forbidigo
    - forcetypeassert
    - ifshort
    - importas
    - nilerr
    - predeclared
    - thelper
    - tparallel
    - wastedassign
    - promlinter
    # - dupl
    - godot
    - funlen
    - wsl
    # - gochecknoglobals
    # - gochecknoinits
    # - goconst
    - gocritic
    # - godox
    # - goerr113
    # - gosec
    # - noctx
    - prealloc
    # - stylecheck
    # - testpackage
    # - cyclop
    # - errorlint
    - nlreturn
    # - revive
    # - tagliatelle
    - unparam

issues:
  # Maximum issues count per one linter. Set to 0 to disable. Default is 50.
  max-issues-per-linter: 0

  # Maximum count of issues with the same text. Set to 0 to disable. Default is 3.
  max-same-issues: 0

  # Show only new issues: if there are unstaged changes or untracked files,
  # only those changes are analyzed, else only changes in HEAD~ are analyzed.
  # It's a super-useful option for integration of golangci-lint into existing
  # large codebase. It's not practical to fix all existing issues at the moment
  # of integration: much better don't allow issues in new code.
  # Default is false.
  new: false

  exclude-rules:
    - linters:
        - staticcheck
      text: "is deprecated: Do not use."

    - linters:
        - govet
      text: "impl.MessageState contains sync.Mutex"

    - linters:
        - govet
      text: "composite literal uses unkeyed fields"
